{% include 'header' %}

import UIKit
import OnDeallocateX

class {{ prefix }}{{ module_info.name }}ModuleConfigurator {

    func configureModuleForViewInput<UIViewController>(viewInput: UIViewController{% if custom_parameters.extended_configurator_create and custom_parameters.extended_configure %}, with config: {{ prefix }}{{ module_info.name }}ModuleConfig{% endif %}) {
        if let viewController = viewInput as? {{ prefix }}{{ module_info.name }}ViewController {
            configure(viewController: viewController{% if custom_parameters.extended_configurator_create and custom_parameters.extended_configure %}, with: config{% endif %})
        }
    }

    private func configure(viewController: {{ prefix }}{{ module_info.name }}ViewController{% if custom_parameters.extended_configurator_create and custom_parameters.extended_configure %}, with config: {{ prefix }}{{ module_info.name }}ModuleConfig{% endif %}) {

        guard viewController.output == nil else { // prevent double configuration
            return
        }

        let router = {{ prefix }}{{ module_info.name }}Router()

        let presenter = {{ prefix }}{{ module_info.name }}Presenter()
        presenter.view = viewController
        presenter.router = router

        let interactor = {{ prefix }}{{ module_info.name }}Interactor()
        interactor.output = presenter

        presenter.interactor = interactor
        viewController.output = presenter

        viewController.onWillDeallocate {
            presenter.willDeinit()
        }
        {% if custom_parameters.extended_configurator_create -%}
        presenter.configure({% if custom_parameters.extended_configure %}with: config{% endif %})
        {%- endif %}
    }

    func create({% if custom_parameters.extended_configurator_create and custom_parameters.extended_configure %}with config: {{ prefix }}{{ module_info.name }}ModuleConfig{% endif %}) -> UIViewController {
        let storyboard = UIStoryboard(name: "{{ prefix }}{{ module_info.name }}", bundle: nil)
        let viewController = storyboard.instantiateInitialViewController()  as! {{ prefix }}{{ module_info.name }}ViewController
        {% if custom_parameters.extended_configurator_create and custom_parameters.extended_configure -%}
        configureModuleForViewInput(viewInput: viewController, with: config)
        {%- else -%}
        configureModuleForViewInput(viewInput: viewController)
        {%- endif %}
        return viewController
    }

}
