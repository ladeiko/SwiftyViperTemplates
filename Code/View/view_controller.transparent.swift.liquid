{% include 'header' %}

import UIKit
import TransparentProxyViewController
//import ViperMcFlurryX_Swift

final class {{ prefix }}{{ module_info.name }}ViewController: TransparentProxyViewController, {{ prefix }}{{ module_info.name }}ViewInput {
// MARK: - VIPER Vars

    var output: {{ prefix }}{{ module_info.name }}ViewOutput!
// MARK: - Outlets
    // TODO: Place your code here

    // MARK: - Vars

    private var shown = false

    // MARK: - Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
        output.viewIsReady()
    }

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        if !shown {
            shown = true
            showController()
        }
    }

    // MARK: - {{ prefix }}{{ module_info.name }}ViewInput
func configure(with theme: {{ prefix }}{{ module_info.name }}ViewInputTheme) {
// TODO: Place your code here
    }

    // MARK: - UI Actions
    // TODO: Place your code here

    // MARK: - Helpers

    private func showController() {
        // TODO Show your real controller like UIAlertController, etc.
        //let controller = UIViewController()
        //present(controller, animated: animated, completion: nil)
    }
}

//extension {{ prefix }}{{ module_info.name }}ViewController: ViperModuleViewControllerPresenter {
//
//   func viperModuleViewControllerShouldPresent(in viewController: UIViewController) -> Bool {
//        return true
//    }
//
//    func viperModuleViewControllerPresent(in viewController: UIViewController) {
//        viewController.present(self, animated: true)
//    }
//}

#if canImport(SwiftUI) && DEBUG
import SwiftUI

fileprivate struct {{ prefix }}{{ module_info.name }}ViewControllerContainerView: UIViewControllerRepresentable {
typealias UIViewControllerType = {{ prefix }}{{ module_info.name }}ViewController
func makeUIViewController(context: Context) -> UIViewControllerType {
        return {{ prefix }}{{ module_info.name }}ViewController()
}

    func updateUIViewController(_ uiViewController: UIViewControllerType, context: Context) {}
}

struct {{ prefix }}{{ module_info.name }}ViewController_Previews: PreviewProvider {
static var previews: some View {
{{ prefix }}{{ module_info.name }}ViewControllerContainerView()
.colorScheme(.light)
{{ prefix }}{{ module_info.name }}ViewControllerContainerView()
            .colorScheme(.dark)
    }
}
#endif