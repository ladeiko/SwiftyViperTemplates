{% include 'header' %}

import UIKitPlus

class {{ prefix }}{{ module_info.name }}ViewController: UIViewController {

    // MARK: - VIPER Vars

    var output: {{ prefix }}{{ module_info.name }}ViewOutput!

    // MARK: - Outlets
    // TODO: Place your code here

    // MARK: - Vars
    
    private var wrapperController: {{ prefix }}{{ module_info.name }}ViewControllerWrapper?

    // MARK: - Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .clear
        wrapperController = {{ prefix }}{{ module_info.name }}ViewControllerWrapper()
        wrapperController!.owner = self
        addChild(wrapperController!)
        wrapperController!.beginAppearanceTransition(true, animated: false)
        wrapperController!.view.frame = CGRect(origin: .zero, size: view.bounds.size)
        view.addSubview(wrapperController!.view)
        wrapperController!.endAppearanceTransition()
        wrapperController!.didMove(toParent: self)
        output.viewIsReady()
    }

    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        wrapperController?.view.frame = CGRect(origin: .zero, size: view.bounds.size)
    }
}

fileprivate extension {{ prefix }}{{ module_info.name }}ViewController {

    // MARK: - UI Actions
    // TODO: Place your code here

}

fileprivate extension {{ prefix }}{{ module_info.name }}ViewController {
    
    // MARK: - Helpers

}

extension {{ prefix }}{{ module_info.name }}ViewController:  {{ prefix }}{{module_info.name}}ViewInput {

    func configure(with theme: {{ prefix }}{{ module_info.name }}ViewInputTheme) {
        // TODO: Place your code here
    }

}

class {{ prefix }}{{ module_info.name }}ViewControllerWrapper: ViewController {

    weak var owner: {{ prefix }}{{ module_info.name }}ViewController?

    // MARK: - Life cycle

    override func buildUI() {
        super.buildUI()
        view.backgroundColor = .red
        body {
            UVStack {
                Text("#TODO")
                    .background(.blue)
                Space()
                    .height(20)
                Button("#EXAMPLE BUTTON")
                    .background(.red)
//                    .onTapGesture { [weak self] button in
//                        guard let self = self else { return }
//                        self.owner?.output?.someAction()
//                    }
            }
            .alignment(.center)
            .centerInSuperview()
        }
    }

}

#if canImport(SwiftUI) && DEBUG
import SwiftUI
@available(iOS 13.0, *)
struct {{ prefix }}{{ module_info.name }}ViewController_Preview: PreviewProvider, DeclarativePreview {
    static var preview: Preview {
        Preview {
            {{ prefix }}{{ module_info.name }}ViewControllerWrapper()
        }
        .colorScheme(.dark)
        .device(.iPhoneX)
        .language(.fr)
        .rtl(true)
    }
}
#endif
