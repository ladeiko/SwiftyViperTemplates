{% include 'header' %}

import UIKit
import TransparentProxyViewController

class {{ prefix }}{{ module_info.name }}ViewController: TransparentProxyViewController {

    // MARK: - VIPER Vars

    var output: {{ prefix }}{{ module_info.name }}ViewOutput!

    // MARK: - Outlets
    // TODO: Place your code here

    // MARK: - Vars

    private var shown = false
    private var alertTitle: String?
    private var alertMessage: String?

    // MARK: - Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
        output.viewIsReady()
    }

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        if !shown {
            shown = true
            showController()
        }
    }

    // MARK: - Helpers

    private func showController() {
        let controller = UIAlertController(title: alertTitle, message: alertMessage, preferredStyle: .alert)
        let closeAction = UIAlertAction (title: NSLocalizedString("OK", comment: ""), style: .cancel, handler:  { _ in
            self.output.userDidTapOnClose()
        })
        controller.addAction(closeAction)
        present(controller, animated: true, completion: nil)
    }
}

extension {{ prefix }}{{ module_info.name }}ViewController: {{ prefix }}{{module_info.name}}ViewInput {

    func configure(with theme: {{ prefix }}{{ module_info.name }}ViewInputTheme) {
        // TODO: Place your code here
    }

    func setAlertTitle(_ title: String?) {
        alertTitle = title
    }

    func setAlertMessage(_ message: String?) {
        alertMessage = message
    }

}

extension {{ prefix }}{{ module_info.name }}ViewController {

    // MARK: - UI Actions
    // TODO: Place your code here
}

#if canImport(SwiftUI) && DEBUG && false // set to true, for preview using SwiftUI
import SwiftUI

fileprivate class {{ prefix }}{{ module_info.name }}ViewControllerFakeOutputForPreview: {{ prefix }}{{ module_info.name }}ViewOutput {
    func viewIsReady() {}
}

@available(iOS 13.0, *)
fileprivate struct {{ prefix }}{{ module_info.name }}ViewControllerRepresentable: UIViewControllerRepresentable {
    func updateUIViewController(_ uiViewController: {{ prefix }}{{ module_info.name }}ViewController, context: Context) {}
    func makeUIViewController(context: Context) -> {{ prefix }}{{ module_info.name }}ViewController {
        let controller = {{ prefix }}{{ module_info.name }}ViewController()
        controller.output = {{ prefix }}{{ module_info.name }}ViewControllerFakeOutputForPreview()
        // TODO: Place your code here
        return controller
    }
}

@available(iOS 13.0, *)
struct {{ prefix }}{{ module_info.name }}ViewController_Previews: PreviewProvider {
    static var previews: some View {
        {{ prefix }}{{ module_info.name }}ViewControllerRepresentable()
            .preferredColorScheme(.light)
            //.previewDevice("iPhone X")
        //{{ prefix }}{{ module_info.name }}ViewControllerRepresentable()
        //    .preferredColorScheme(.dark)
        //    .previewDevice("iPhone 12")
    }
}
#endif