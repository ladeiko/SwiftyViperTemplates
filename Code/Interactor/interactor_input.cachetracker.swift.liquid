{% include 'header' %}

import Foundation
import CacheTracker

protocol {{ prefix }}{{ module_info.name }}InteractorInput: class {

    {% if custom_parameters.extended_configure %}func configure(with {% if custom_parameters.split_module_config_into_parameters_and_environment == "true" -%}
                                                                    environment: {{ prefix }}{{ module_info.name }}ModuleInputEnvironment)
                                                                    {%- else -%}
                                                                    config: {{ prefix }}{{ module_info.name }}ModuleInputConfig)
                                                                    {%- endif -%}{% else %}func configure(){% endif %}
    func deinitialize()
    func isDeliveringModelsListChanges() -> Bool
    func startDeliveringModelsListChanges()
    func stopDeliveringModelsListChanges()
    func initialStateOfModelsList() -> [CacheTransaction<{{ prefix }}{{ module_info.name }}ModuleEntityModel>]
    //func loadImage(for model: {{ prefix }}{{ module_info.name }}ModuleEntityModel, completion: @escaping ((_ image: UIImage?) -> Void))
}
