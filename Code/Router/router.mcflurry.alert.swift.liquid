{% include 'header' %}

import ViperMcFlurryX_Swift

final class {{ prefix }}{{ module_info.name }}Router: {{ prefix }}{{ module_info.name }}RouterInput {
    
    // MARK: - VIPER Vars

    weak var calleeOutput: (ViperModuleOutput /* Add supported protocols here, e.g: & AnotherModuleOutput */)!
    weak var transitionHandler: ViperModuleTransitionHandler!
    
    // MARK: - Vars
    // TODO: Place your code here

    // MARK: - {{ prefix }}{{ module_info.name }}RouterInput
    
    func dismiss() {
        transitionHandler.closeCurrentModule(true)
    }

    func dismissAsync() async {
        await withCheckedContinuation { continuation in
            transitionHandler.closeCurrentModule(true) {
                continuation.resume(with: .success(()))
            }
        }
    }
      
    // MARK: - Helpers
    // TODO: Place your code here
      
}